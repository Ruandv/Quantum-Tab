name: Remind Slack on Stale PRs

on:
  schedule:
    - cron: '0 8 * * *' # Daily at 08:00

jobs:
  remind-slack:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore Slack PR cache
        uses: actions/cache@v4
        with:
          path: .slack-cache
          key: slack-pr-tracker-${{ github.repository }}

      - name: Check stale PRs and remind
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = '.slack-cache/tracker.txt';
            const lines = fs.existsSync(path) ? fs.readFileSync(path, 'utf8').split('\n') : [];

            const { Octokit } = require("@octokit/rest");
            const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });

            const now = new Date();
            for (const line of lines) {
              const [prNumber, slackTs] = line.split('=');
              if (!prNumber || !slackTs) continue;

              const pr = await octokit.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: parseInt(prNumber)
              });

              const created = new Date(pr.data.created_at);
              const ageInDays = (now - created) / (1000 * 60 * 60 * 24);

              if (pr.data.state === 'open' && ageInDays >= 2) {
                await fetch('https://slack.com/api/chat.postMessage', {
                  method: 'POST',
                  headers: {
                    'Authorization': `Bearer ${process.env.SLACK_BOT_TOKEN}`,
                    'Content-Type': 'application/json'
                  },
                  body: JSON.stringify({
                    channel: process.env.SLACK_CHANNEL_ID,
                    thread_ts: slackTs,
                    text: `‚è≥ Reminder: This PR is still open after 2 days. Please review: <${pr.data.html_url}|${pr.data.title}>`
                  })
                });
              }
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}